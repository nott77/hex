<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_cursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grid_x = global.mouse_grid_x;
grid_y = global.mouse_grid_y;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// INI Mouse Pos
x = global.mouse_world_x;
y = global.mouse_world_y;

grid_x = global.mouse_grid_x;
grid_y = global.mouse_grid_y;




///// MOVEMENT

/// MOVE
if (mouse_check_button_pressed(mb_right)){
    if (global.selected_actor != noone and global.hover_node.move_node == true) {
    
    current = global.hover_node;
    
    // create priority queue
    path = ds_priority_create();
    
    // Add Current node to queue
    ds_priority_add(path, current, current.g_score);
    
    // Step trhough each node parent to parent
    while(current.parent != noone) {
        // Add parent node to queue. Priority = to current parents gscore
        ds_priority_add(path, current.parent, current.parent.g_score);
        
        // Set current equal to current parent ready to go again
        current = current.parent;
                
    }
    
    do {
        // delete lowest priority node (closest to actors) store ID in current
        current = ds_priority_delete_min(path);
        
        // add current nodes sprite coords to selected actors path
        path_add_point(global.selected_actor.movement_path, current.x, current.y, 100);
        
    
    } until(ds_priority_empty(path));
    
    // Clean Up queue
    ds_priority_destroy(path);
    
    // First clear node of selected actor
    map[global.selected_actor.grid_x, global.selected_actor.grid_y].occupant = noone;
    
    // Update Selected actros grid coords
    global.selected_actor.grid_x = grid_x;
    global.selected_actor.grid_y = grid_y;
    
    // Update SElected actors future node
    global.hover_node.occupant = global.selected_actor;
    
    // Move Actor!
    global.selected_actor.state = "begin path";
    
    // reduce selected actors actions and wipe node
    if (global.hover_node.g_score &gt; global.selected_actor.move) {
        global.selected_actor.actions -= 2;
        scr_wipe_nodes();
    } else {
        global.selected_actor.actions -= 1;
        scr_wipe_nodes();
    }
    
    global.selected_actor = noone;    
    
    }                  
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
